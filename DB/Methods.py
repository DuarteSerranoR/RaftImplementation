import psycopg2
from alembic import op
import sqlalchemy as sa


def launch_db():
    # establishing the connection
    conn = psycopg2.connect(
        database="raft-logs", user='dev', password='passwd', host='127.0.0.1', port='5432'
    )
    conn.autocommit = True

    # Creating a cursor object using the cursor() method
    cursor = conn.cursor()

    cursor.execute("SELECT * FROM logs")
    exists = cursor.fetchone()
    if not exists:
        # Preparing query to create a database
        sql = '''CREATE database "raft-logs"'''

        # Creating a database
        cursor.execute(sql)
        print("Database created successfully")
        upgrade()
        print("Logs table created successfully")
    else:
        try:
            upgrade()
            print("Logs table created successfully")
        except:
            print("Logs table already existed")

    # Closing the connection
    conn.close()


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
        op.create_table('Logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=True),
        sa.Column('replica_id', sa.Integer(), nullable=True),
        sa.Column('label', sa.String(), nullable=True),
        sa.Column('data', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.Sequence('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Logs')
    # ### end Alembic commands ###
